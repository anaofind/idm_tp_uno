/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.rulesUNO.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.rulesUNO.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RulesUNOFactoryImpl extends EFactoryImpl implements RulesUNOFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static RulesUNOFactory init()
  {
    try
    {
      RulesUNOFactory theRulesUNOFactory = (RulesUNOFactory)EPackage.Registry.INSTANCE.getEFactory(RulesUNOPackage.eNS_URI);
      if (theRulesUNOFactory != null)
      {
        return theRulesUNOFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new RulesUNOFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RulesUNOFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case RulesUNOPackage.UNO: return createUno();
      case RulesUNOPackage.PARTICIPANT_TYPE: return createParticipantType();
      case RulesUNOPackage.NB_JOUEUR: return createNbJoueur();
      case RulesUNOPackage.VARIANTES: return createVariantes();
      case RulesUNOPackage.DECLARATION: return createDeclaration();
      case RulesUNOPackage.REGLES: return createRegles();
      case RulesUNOPackage.AFFECTATION: return createAffectation();
      case RulesUNOPackage.INSTRUCTION: return createInstruction();
      case RulesUNOPackage.INSTRUCTIONS_BLOC: return createInstructionsBloc();
      case RulesUNOPackage.INSTRUCTION_CHOIX: return createInstructionChoix();
      case RulesUNOPackage.VARIABLE_NUMERIQUE: return createVariableNumerique();
      case RulesUNOPackage.VARIABLE_BOOLEENE: return createVariableBooleene();
      case RulesUNOPackage.ACTION: return createAction();
      case RulesUNOPackage.ATTRIBUT: return createAttribut();
      case RulesUNOPackage.EXPRESSION_NUMERIQUE: return createExpressionNumerique();
      case RulesUNOPackage.EXPRESSION_BOOLEENE: return createExpressionBooleene();
      case RulesUNOPackage.ENTIER: return createEntier();
      case RulesUNOPackage.BOOLEEN: return createBooleen();
      case RulesUNOPackage.BOOLEAN_CONTRAIRE: return createBooleanContraire();
      case RulesUNOPackage.CONDITION: return createCondition();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Uno createUno()
  {
    UnoImpl uno = new UnoImpl();
    return uno;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParticipantType createParticipantType()
  {
    ParticipantTypeImpl participantType = new ParticipantTypeImpl();
    return participantType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NbJoueur createNbJoueur()
  {
    NbJoueurImpl nbJoueur = new NbJoueurImpl();
    return nbJoueur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variantes createVariantes()
  {
    VariantesImpl variantes = new VariantesImpl();
    return variantes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Declaration createDeclaration()
  {
    DeclarationImpl declaration = new DeclarationImpl();
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Regles createRegles()
  {
    ReglesImpl regles = new ReglesImpl();
    return regles;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Affectation createAffectation()
  {
    AffectationImpl affectation = new AffectationImpl();
    return affectation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Instruction createInstruction()
  {
    InstructionImpl instruction = new InstructionImpl();
    return instruction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InstructionsBloc createInstructionsBloc()
  {
    InstructionsBlocImpl instructionsBloc = new InstructionsBlocImpl();
    return instructionsBloc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InstructionChoix createInstructionChoix()
  {
    InstructionChoixImpl instructionChoix = new InstructionChoixImpl();
    return instructionChoix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableNumerique createVariableNumerique()
  {
    VariableNumeriqueImpl variableNumerique = new VariableNumeriqueImpl();
    return variableNumerique;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableBooleene createVariableBooleene()
  {
    VariableBooleeneImpl variableBooleene = new VariableBooleeneImpl();
    return variableBooleene;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Attribut createAttribut()
  {
    AttributImpl attribut = new AttributImpl();
    return attribut;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExpressionNumerique createExpressionNumerique()
  {
    ExpressionNumeriqueImpl expressionNumerique = new ExpressionNumeriqueImpl();
    return expressionNumerique;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExpressionBooleene createExpressionBooleene()
  {
    ExpressionBooleeneImpl expressionBooleene = new ExpressionBooleeneImpl();
    return expressionBooleene;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entier createEntier()
  {
    EntierImpl entier = new EntierImpl();
    return entier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Booleen createBooleen()
  {
    BooleenImpl booleen = new BooleenImpl();
    return booleen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BooleanContraire createBooleanContraire()
  {
    BooleanContraireImpl booleanContraire = new BooleanContraireImpl();
    return booleanContraire;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RulesUNOPackage getRulesUNOPackage()
  {
    return (RulesUNOPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static RulesUNOPackage getPackage()
  {
    return RulesUNOPackage.eINSTANCE;
  }

} //RulesUNOFactoryImpl
