/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.rulesUNO.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.rulesUNO.NbJoueur;
import org.xtext.example.mydsl.rulesUNO.ParticipantType;
import org.xtext.example.mydsl.rulesUNO.Regles;
import org.xtext.example.mydsl.rulesUNO.RulesUNOPackage;
import org.xtext.example.mydsl.rulesUNO.Uno;
import org.xtext.example.mydsl.rulesUNO.Variantes;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Uno</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.rulesUNO.impl.UnoImpl#getNbJoueur <em>Nb Joueur</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rulesUNO.impl.UnoImpl#getParticipantType <em>Participant Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rulesUNO.impl.UnoImpl#getVariantes <em>Variantes</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rulesUNO.impl.UnoImpl#getRegles <em>Regles</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UnoImpl extends MinimalEObjectImpl.Container implements Uno
{
  /**
   * The cached value of the '{@link #getNbJoueur() <em>Nb Joueur</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNbJoueur()
   * @generated
   * @ordered
   */
  protected NbJoueur nbJoueur;

  /**
   * The cached value of the '{@link #getParticipantType() <em>Participant Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParticipantType()
   * @generated
   * @ordered
   */
  protected ParticipantType participantType;

  /**
   * The cached value of the '{@link #getVariantes() <em>Variantes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariantes()
   * @generated
   * @ordered
   */
  protected Variantes variantes;

  /**
   * The cached value of the '{@link #getRegles() <em>Regles</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegles()
   * @generated
   * @ordered
   */
  protected Regles regles;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UnoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RulesUNOPackage.Literals.UNO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NbJoueur getNbJoueur()
  {
    return nbJoueur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNbJoueur(NbJoueur newNbJoueur, NotificationChain msgs)
  {
    NbJoueur oldNbJoueur = nbJoueur;
    nbJoueur = newNbJoueur;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__NB_JOUEUR, oldNbJoueur, newNbJoueur);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNbJoueur(NbJoueur newNbJoueur)
  {
    if (newNbJoueur != nbJoueur)
    {
      NotificationChain msgs = null;
      if (nbJoueur != null)
        msgs = ((InternalEObject)nbJoueur).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__NB_JOUEUR, null, msgs);
      if (newNbJoueur != null)
        msgs = ((InternalEObject)newNbJoueur).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__NB_JOUEUR, null, msgs);
      msgs = basicSetNbJoueur(newNbJoueur, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__NB_JOUEUR, newNbJoueur, newNbJoueur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParticipantType getParticipantType()
  {
    return participantType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParticipantType(ParticipantType newParticipantType, NotificationChain msgs)
  {
    ParticipantType oldParticipantType = participantType;
    participantType = newParticipantType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__PARTICIPANT_TYPE, oldParticipantType, newParticipantType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParticipantType(ParticipantType newParticipantType)
  {
    if (newParticipantType != participantType)
    {
      NotificationChain msgs = null;
      if (participantType != null)
        msgs = ((InternalEObject)participantType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__PARTICIPANT_TYPE, null, msgs);
      if (newParticipantType != null)
        msgs = ((InternalEObject)newParticipantType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__PARTICIPANT_TYPE, null, msgs);
      msgs = basicSetParticipantType(newParticipantType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__PARTICIPANT_TYPE, newParticipantType, newParticipantType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variantes getVariantes()
  {
    return variantes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariantes(Variantes newVariantes, NotificationChain msgs)
  {
    Variantes oldVariantes = variantes;
    variantes = newVariantes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__VARIANTES, oldVariantes, newVariantes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariantes(Variantes newVariantes)
  {
    if (newVariantes != variantes)
    {
      NotificationChain msgs = null;
      if (variantes != null)
        msgs = ((InternalEObject)variantes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__VARIANTES, null, msgs);
      if (newVariantes != null)
        msgs = ((InternalEObject)newVariantes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__VARIANTES, null, msgs);
      msgs = basicSetVariantes(newVariantes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__VARIANTES, newVariantes, newVariantes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Regles getRegles()
  {
    return regles;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRegles(Regles newRegles, NotificationChain msgs)
  {
    Regles oldRegles = regles;
    regles = newRegles;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__REGLES, oldRegles, newRegles);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegles(Regles newRegles)
  {
    if (newRegles != regles)
    {
      NotificationChain msgs = null;
      if (regles != null)
        msgs = ((InternalEObject)regles).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__REGLES, null, msgs);
      if (newRegles != null)
        msgs = ((InternalEObject)newRegles).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RulesUNOPackage.UNO__REGLES, null, msgs);
      msgs = basicSetRegles(newRegles, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RulesUNOPackage.UNO__REGLES, newRegles, newRegles));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RulesUNOPackage.UNO__NB_JOUEUR:
        return basicSetNbJoueur(null, msgs);
      case RulesUNOPackage.UNO__PARTICIPANT_TYPE:
        return basicSetParticipantType(null, msgs);
      case RulesUNOPackage.UNO__VARIANTES:
        return basicSetVariantes(null, msgs);
      case RulesUNOPackage.UNO__REGLES:
        return basicSetRegles(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RulesUNOPackage.UNO__NB_JOUEUR:
        return getNbJoueur();
      case RulesUNOPackage.UNO__PARTICIPANT_TYPE:
        return getParticipantType();
      case RulesUNOPackage.UNO__VARIANTES:
        return getVariantes();
      case RulesUNOPackage.UNO__REGLES:
        return getRegles();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RulesUNOPackage.UNO__NB_JOUEUR:
        setNbJoueur((NbJoueur)newValue);
        return;
      case RulesUNOPackage.UNO__PARTICIPANT_TYPE:
        setParticipantType((ParticipantType)newValue);
        return;
      case RulesUNOPackage.UNO__VARIANTES:
        setVariantes((Variantes)newValue);
        return;
      case RulesUNOPackage.UNO__REGLES:
        setRegles((Regles)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RulesUNOPackage.UNO__NB_JOUEUR:
        setNbJoueur((NbJoueur)null);
        return;
      case RulesUNOPackage.UNO__PARTICIPANT_TYPE:
        setParticipantType((ParticipantType)null);
        return;
      case RulesUNOPackage.UNO__VARIANTES:
        setVariantes((Variantes)null);
        return;
      case RulesUNOPackage.UNO__REGLES:
        setRegles((Regles)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RulesUNOPackage.UNO__NB_JOUEUR:
        return nbJoueur != null;
      case RulesUNOPackage.UNO__PARTICIPANT_TYPE:
        return participantType != null;
      case RulesUNOPackage.UNO__VARIANTES:
        return variantes != null;
      case RulesUNOPackage.UNO__REGLES:
        return regles != null;
    }
    return super.eIsSet(featureID);
  }

} //UnoImpl
