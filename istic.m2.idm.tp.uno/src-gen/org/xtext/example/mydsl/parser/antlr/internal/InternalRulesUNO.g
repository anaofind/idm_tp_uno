/*
 * generated by Xtext 2.23.0
 */
grammar InternalRulesUNO;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.RulesUNOGrammarAccess;

}

@parser::members {

 	private RulesUNOGrammarAccess grammarAccess;

    public InternalRulesUNOParser(TokenStream input, RulesUNOGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Uno";
   	}

   	@Override
   	protected RulesUNOGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUno
entryRuleUno returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnoRule()); }
	iv_ruleUno=ruleUno
	{ $current=$iv_ruleUno.current; }
	EOF;

// Rule Uno
ruleUno returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RUno'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnoAccess().getRUnoKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnoAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getNbJoueurNbJoueurParserRuleCall_2_0());
				}
				lv_nbJoueur_2_0=ruleNbJoueur
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					set(
						$current,
						"nbJoueur",
						lv_nbJoueur_2_0,
						"org.xtext.example.mydsl.RulesUNO.NbJoueur");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getParticipantTypeParticipantTypeParserRuleCall_3_0());
				}
				lv_participantType_3_0=ruleParticipantType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					set(
						$current,
						"participantType",
						lv_participantType_3_0,
						"org.xtext.example.mydsl.RulesUNO.ParticipantType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getVariantesVariantesParserRuleCall_4_0());
				}
				lv_variantes_4_0=ruleVariantes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					set(
						$current,
						"variantes",
						lv_variantes_4_0,
						"org.xtext.example.mydsl.RulesUNO.Variantes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getReglesReglesParserRuleCall_5_0());
				}
				lv_regles_5_0=ruleRegles
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					set(
						$current,
						"regles",
						lv_regles_5_0,
						"org.xtext.example.mydsl.RulesUNO.Regles");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getUnoAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleParticipantType
entryRuleParticipantType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParticipantTypeRule()); }
	iv_ruleParticipantType=ruleParticipantType
	{ $current=$iv_ruleParticipantType.current; }
	EOF;

// Rule ParticipantType
ruleParticipantType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='participant'
		{
			newLeafNode(otherlv_0, grammarAccess.getParticipantTypeAccess().getParticipantKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getParticipantTypeAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					lv_id_2_1='EQUIPE'
					{
						newLeafNode(lv_id_2_1, grammarAccess.getParticipantTypeAccess().getIdEQUIPEKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParticipantTypeRule());
						}
						setWithLastConsumed($current, "id", lv_id_2_1, null);
					}
					    |
					lv_id_2_2='JOUEUR'
					{
						newLeafNode(lv_id_2_2, grammarAccess.getParticipantTypeAccess().getIdJOUEURKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParticipantTypeRule());
						}
						setWithLastConsumed($current, "id", lv_id_2_2, null);
					}
				)
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getParticipantTypeAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleNbJoueur
entryRuleNbJoueur returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNbJoueurRule()); }
	iv_ruleNbJoueur=ruleNbJoueur
	{ $current=$iv_ruleNbJoueur.current; }
	EOF;

// Rule NbJoueur
ruleNbJoueur returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='nb_joueur'
		{
			newLeafNode(otherlv_0, grammarAccess.getNbJoueurAccess().getNb_joueurKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getNbJoueurAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_val_2_0=RULE_INT
				{
					newLeafNode(lv_val_2_0, grammarAccess.getNbJoueurAccess().getValINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNbJoueurRule());
					}
					setWithLastConsumed(
						$current,
						"val",
						lv_val_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getNbJoueurAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleVariantes
entryRuleVariantes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariantesRule()); }
	iv_ruleVariantes=ruleVariantes
	{ $current=$iv_ruleVariantes.current; }
	EOF;

// Rule Variantes
ruleVariantes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariantesAccess().getVariantesAction_0(),
					$current);
			}
		)
		otherlv_1='variantes'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariantesAccess().getVariantesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariantesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVariantesAccess().getVariantesVarianteParserRuleCall_3_0_0());
					}
					lv_variantes_3_0=ruleVariante
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariantesRule());
						}
						add(
							$current,
							"variantes",
							lv_variantes_3_0,
							"org.xtext.example.mydsl.RulesUNO.Variante");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getVariantesAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVariantesAccess().getVariantesVarianteParserRuleCall_3_1_1_0());
						}
						lv_variantes_5_0=ruleVariante
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariantesRule());
							}
							add(
								$current,
								"variantes",
								lv_variantes_5_0,
								"org.xtext.example.mydsl.RulesUNO.Variante");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getVariantesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getInstructionParserRuleCall_0());
		}
		this_Instruction_0=ruleInstruction
		{
			$current = $this_Instruction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getConditionParserRuleCall_1());
		}
		this_Condition_1=ruleCondition
		{
			$current = $this_Condition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getAffectationParserRuleCall_2());
		}
		this_Affectation_2=ruleAffectation
		{
			$current = $this_Affectation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRegles
entryRuleRegles returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReglesRule()); }
	iv_ruleRegles=ruleRegles
	{ $current=$iv_ruleRegles.current; }
	EOF;

// Rule Regles
ruleRegles returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReglesAccess().getReglesAction_0(),
					$current);
			}
		)
		otherlv_1='regles'
		{
			newLeafNode(otherlv_1, grammarAccess.getReglesAccess().getReglesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReglesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReglesAccess().getDeclarationsDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReglesRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"org.xtext.example.mydsl.RulesUNO.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReglesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAffectation
entryRuleAffectation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectationRule()); }
	iv_ruleAffectation=ruleAffectation
	{ $current=$iv_ruleAffectation.current; }
	EOF;

// Rule Affectation
ruleAffectation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectationAccess().getAttributAttributParserRuleCall_0_0());
				}
				lv_attribut_0_0=ruleAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectationRule());
					}
					set(
						$current,
						"attribut",
						lv_attribut_0_0,
						"org.xtext.example.mydsl.RulesUNO.Attribut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAffectationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectationAccess().getExpressionExpressionNumeriqueParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpressionNumerique
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectationRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.RulesUNO.ExpressionNumerique");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getAffectationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getInstructionsBlocParserRuleCall_0());
		}
		this_InstructionsBloc_0=ruleInstructionsBloc
		{
			$current = $this_InstructionsBloc_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getActionParserRuleCall_1_0());
			}
			this_Action_1=ruleAction
			{
				$current = $this_Action_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getInstructionAccess().getSemicolonKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleInstructionsBloc
entryRuleInstructionsBloc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionsBlocRule()); }
	iv_ruleInstructionsBloc=ruleInstructionsBloc
	{ $current=$iv_ruleInstructionsBloc.current; }
	EOF;

// Rule InstructionsBloc
ruleInstructionsBloc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInstructionsBlocAccess().getInstructionChoixParserRuleCall());
	}
	this_InstructionChoix_0=ruleInstructionChoix
	{
		$current = $this_InstructionChoix_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleInstructionChoix
entryRuleInstructionChoix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionChoixRule()); }
	iv_ruleInstructionChoix=ruleInstructionChoix
	{ $current=$iv_ruleInstructionChoix.current; }
	EOF;

// Rule InstructionChoix
ruleInstructionChoix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='choix'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstructionChoixAccess().getChoixKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getInstructionChoixAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionChoixAccess().getInstructionsInstructionParserRuleCall_2_0());
				}
				lv_instructions_2_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionChoixRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_2_0,
						"org.xtext.example.mydsl.RulesUNO.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionChoixAccess().getInstructionsInstructionParserRuleCall_3_0());
				}
				lv_instructions_3_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionChoixRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_3_0,
						"org.xtext.example.mydsl.RulesUNO.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getInstructionChoixAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVariableNumerique
entryRuleVariableNumerique returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableNumeriqueRule()); }
	iv_ruleVariableNumerique=ruleVariableNumerique
	{ $current=$iv_ruleVariableNumerique.current; }
	EOF;

// Rule VariableNumerique
ruleVariableNumerique returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVariableNumeriqueAccess().getVarAttributParserRuleCall_0());
			}
			lv_var_0_0=ruleAttribut
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVariableNumeriqueRule());
				}
				set(
					$current,
					"var",
					lv_var_0_0,
					"org.xtext.example.mydsl.RulesUNO.Attribut");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVariableBooleene
entryRuleVariableBooleene returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableBooleeneRule()); }
	iv_ruleVariableBooleene=ruleVariableBooleene
	{ $current=$iv_ruleVariableBooleene.current; }
	EOF;

// Rule VariableBooleene
ruleVariableBooleene returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableBooleeneAccess().getVarVarianteParserRuleCall_0_0());
				}
				lv_var_0_0=ruleVariante
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableBooleeneRule());
					}
					set(
						$current,
						"var",
						lv_var_0_0,
						"org.xtext.example.mydsl.RulesUNO.Variante");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableBooleeneAccess().getActionActionParserRuleCall_1_0());
				}
				lv_action_1_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableBooleeneRule());
					}
					set(
						$current,
						"action",
						lv_action_1_0,
						"org.xtext.example.mydsl.RulesUNO.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariante
entryRuleVariante returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVarianteRule()); }
	iv_ruleVariante=ruleVariante
	{ $current=$iv_ruleVariante.current.getText(); }
	EOF;

// Rule Variante
ruleVariante returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BASE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getBASEKeyword_0());
		}
		    |
		kw='DEUX_JOUEURS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getDEUX_JOUEURSKeyword_1());
		}
		    |
		kw='UNO_CHALENGE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getUNO_CHALENGEKeyword_2());
		}
		    |
		kw='EQUIPE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getEQUIPEKeyword_3());
		}
		    |
		kw='CARTES_IDENTIQUES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getCARTES_IDENTIQUESKeyword_4());
		}
		    |
		kw='SUITES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getSUITESKeyword_5());
		}
		    |
		kw='ZERO_ECHANGE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getZERO_ECHANGEKeyword_6());
		}
		    |
		kw='ZERO_TOURNANT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getZERO_TOURNANTKeyword_7());
		}
		    |
		kw='ZERO_QUESTION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVarianteAccess().getZERO_QUESTIONKeyword_8());
		}
	)
;

// Entry rule entryRuleManche
entryRuleManche returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMancheRule()); }
	iv_ruleManche=ruleManche
	{ $current=$iv_ruleManche.current.getText(); }
	EOF;

// Rule Manche
ruleManche returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='MANCHE'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMancheAccess().getMANCHEKeyword());
	}
;

// Entry rule entryRuleAttributManche
entryRuleAttributManche returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributMancheRule()); }
	iv_ruleAttributManche=ruleAttributManche
	{ $current=$iv_ruleAttributManche.current.getText(); }
	EOF;

// Rule AttributManche
ruleAttributManche returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='NB_JOUEUR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributMancheAccess().getNB_JOUEURKeyword_0());
		}
		    |
		kw='NB_PARTICIPANT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributMancheAccess().getNB_PARTICIPANTKeyword_1());
		}
	)
;

// Entry rule entryRuleActionManche
entryRuleActionManche returns [String current=null]:
	{ newCompositeNode(grammarAccess.getActionMancheRule()); }
	iv_ruleActionManche=ruleActionManche
	{ $current=$iv_ruleActionManche.current.getText(); }
	EOF;

// Rule ActionManche
ruleActionManche returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='FINIR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionMancheAccess().getFINIRKeyword_0());
		}
		    |
		kw='NOUVELLE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionMancheAccess().getNOUVELLEKeyword_1());
		}
	)
;

// Entry rule entryRuleJoueur
entryRuleJoueur returns [String current=null]:
	{ newCompositeNode(grammarAccess.getJoueurRule()); }
	iv_ruleJoueur=ruleJoueur
	{ $current=$iv_ruleJoueur.current.getText(); }
	EOF;

// Rule Joueur
ruleJoueur returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='JOUEUR_COURRANT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoueurAccess().getJOUEUR_COURRANTKeyword_0());
		}
		    |
		kw='JOUEUR_SUIVANT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoueurAccess().getJOUEUR_SUIVANTKeyword_1());
		}
		    |
		kw='JOUEUR_TOUS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoueurAccess().getJOUEUR_TOUSKeyword_2());
		}
		    |
		kw='JOUEUR_AUTRE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoueurAccess().getJOUEUR_AUTREKeyword_3());
		}
		    |
		kw='JOUEUR_EXISTE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoueurAccess().getJOUEUR_EXISTEKeyword_4());
		}
		    |
		kw='JOUEUR_SELECTIONNE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoueurAccess().getJOUEUR_SELECTIONNEKeyword_5());
		}
	)
;

// Entry rule entryRuleActionJoueur
entryRuleActionJoueur returns [String current=null]:
	{ newCompositeNode(grammarAccess.getActionJoueurRule()); }
	iv_ruleActionJoueur=ruleActionJoueur
	{ $current=$iv_ruleActionJoueur.current.getText(); }
	EOF;

// Rule ActionJoueur
ruleActionJoueur returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='CRIER_UNO'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getCRIER_UNOKeyword_0());
		}
		    |
		kw='JOUER_CARTE_BASE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_BASEKeyword_1());
		}
		    |
		kw='JOUER_CARTE_JOKER'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_JOKERKeyword_2());
		}
		    |
		kw='JOUER_CARTE_INVERSER_SENS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_INVERSER_SENSKeyword_3());
		}
		    |
		kw='JOUER_CARTE_PASSE_TON_TOUR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PASSE_TON_TOURKeyword_4());
		}
		    |
		kw='JOUER_CARTE_PLUS_2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PLUS_2Keyword_5());
		}
		    |
		kw='JOUER_CARTE_PLUS_4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PLUS_4Keyword_6());
		}
		    |
		kw='JOUER_PLUSIEURS_CARTES_IDENTIQUES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_PLUSIEURS_CARTES_IDENTIQUESKeyword_7());
		}
		    |
		kw='JOUER_CARTE_ZERO'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_CARTE_ZEROKeyword_8());
		}
		    |
		kw='JOUER_SUITE_DE_CARTES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getJOUER_SUITE_DE_CARTESKeyword_9());
		}
		    |
		kw='POSER_QUESTION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getPOSER_QUESTIONKeyword_10());
		}
		    |
		kw='REJOUER'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getREJOUERKeyword_11());
		}
		    |
		kw='PASSER_SON_TOUR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getPASSER_SON_TOURKeyword_12());
		}
		    |
		kw='CHANGER_COULEUR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getCHANGER_COULEURKeyword_13());
		}
		    |
		kw='CHOISIR_COULEUR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getCHOISIR_COULEURKeyword_14());
		}
		    |
		kw='PIOCHER_2_CARTES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getPIOCHER_2_CARTESKeyword_15());
		}
		    |
		kw='PIOCHER_4_CARTES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getPIOCHER_4_CARTESKeyword_16());
		}
		    |
		kw='INVERSER_SENS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getINVERSER_SENSKeyword_17());
		}
		    |
		kw='DONNER_CARTES_AU_JOUEUR_SUIVANT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getDONNER_CARTES_AU_JOUEUR_SUIVANTKeyword_18());
		}
		    |
		kw='ECHANGER_JEU_AVEC_UN_ADVERSAIRE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getECHANGER_JEU_AVEC_UN_ADVERSAIREKeyword_19());
		}
		    |
		kw='REMARQUER_ERREUR_UNO'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionJoueurAccess().getREMARQUER_ERREUR_UNOKeyword_20());
		}
	)
;

// Entry rule entryRuleAttributJoueur
entryRuleAttributJoueur returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributJoueurRule()); }
	iv_ruleAttributJoueur=ruleAttributJoueur
	{ $current=$iv_ruleAttributJoueur.current.getText(); }
	EOF;

// Rule AttributJoueur
ruleAttributJoueur returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='NB_CARTES'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAttributJoueurAccess().getNB_CARTESKeyword());
	}
;

// Entry rule entryRuleParticipant
entryRuleParticipant returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParticipantRule()); }
	iv_ruleParticipant=ruleParticipant
	{ $current=$iv_ruleParticipant.current.getText(); }
	EOF;

// Rule Participant
ruleParticipant returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='PARTICIPANT_COURRANT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParticipantAccess().getPARTICIPANT_COURRANTKeyword_0());
		}
		    |
		kw='PARTICIPANT_EXISTE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParticipantAccess().getPARTICIPANT_EXISTEKeyword_1());
		}
		    |
		kw='PARTICIPANT_SELECTIONNE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParticipantAccess().getPARTICIPANT_SELECTIONNEKeyword_2());
		}
		    |
		kw='PARTICIPANT_MIN_POINTS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParticipantAccess().getPARTICIPANT_MIN_POINTSKeyword_3());
		}
	)
;

// Entry rule entryRuleActionParticipant
entryRuleActionParticipant returns [String current=null]:
	{ newCompositeNode(grammarAccess.getActionParticipantRule()); }
	iv_ruleActionParticipant=ruleActionParticipant
	{ $current=$iv_ruleActionParticipant.current.getText(); }
	EOF;

// Rule ActionParticipant
ruleActionParticipant returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='GAGNER'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionParticipantAccess().getGAGNERKeyword_0());
		}
		    |
		kw='PERDRE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionParticipantAccess().getPERDREKeyword_1());
		}
		    |
		kw='ETRE_ELIMINE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActionParticipantAccess().getETRE_ELIMINEKeyword_2());
		}
	)
;

// Entry rule entryRuleAttributParticipant
entryRuleAttributParticipant returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributParticipantRule()); }
	iv_ruleAttributParticipant=ruleAttributParticipant
	{ $current=$iv_ruleAttributParticipant.current.getText(); }
	EOF;

// Rule AttributParticipant
ruleAttributParticipant returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='POINTS'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAttributParticipantAccess().getPOINTSKeyword());
	}
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getIdJoueurParserRuleCall_0_0_0());
					}
					lv_id_0_0=ruleJoueur
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"id",
							lv_id_0_0,
							"org.xtext.example.mydsl.RulesUNO.Joueur");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getActionAccess().getFullStopKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getActionActionJoueurParserRuleCall_0_2_0());
					}
					lv_action_2_0=ruleActionJoueur
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"action",
							lv_action_2_0,
							"org.xtext.example.mydsl.RulesUNO.ActionJoueur");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='()'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getIdMancheParserRuleCall_1_0_0());
					}
					lv_id_4_0=ruleManche
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"id",
							lv_id_4_0,
							"org.xtext.example.mydsl.RulesUNO.Manche");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='.'
			{
				newLeafNode(otherlv_5, grammarAccess.getActionAccess().getFullStopKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getActionActionMancheParserRuleCall_1_2_0());
					}
					lv_action_6_0=ruleActionManche
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"action",
							lv_action_6_0,
							"org.xtext.example.mydsl.RulesUNO.ActionManche");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='()'
			{
				newLeafNode(otherlv_7, grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getIdParticipantParserRuleCall_2_0_0());
					}
					lv_id_8_0=ruleParticipant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"id",
							lv_id_8_0,
							"org.xtext.example.mydsl.RulesUNO.Participant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='.'
			{
				newLeafNode(otherlv_9, grammarAccess.getActionAccess().getFullStopKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getActionActionParticipantParserRuleCall_2_2_0());
					}
					lv_action_10_0=ruleActionParticipant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"action",
							lv_action_10_0,
							"org.xtext.example.mydsl.RulesUNO.ActionParticipant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='()'
			{
				newLeafNode(otherlv_11, grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleAttribut
entryRuleAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributRule()); }
	iv_ruleAttribut=ruleAttribut
	{ $current=$iv_ruleAttribut.current; }
	EOF;

// Rule Attribut
ruleAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getIdJoueurParserRuleCall_0_0_0());
					}
					lv_id_0_0=ruleJoueur
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"id",
							lv_id_0_0,
							"org.xtext.example.mydsl.RulesUNO.Joueur");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributAccess().getFullStopKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getAttributAttributJoueurParserRuleCall_0_2_0());
					}
					lv_attribut_2_0=ruleAttributJoueur
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"attribut",
							lv_attribut_2_0,
							"org.xtext.example.mydsl.RulesUNO.AttributJoueur");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getIdMancheParserRuleCall_1_0_0());
					}
					lv_id_3_0=ruleManche
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"id",
							lv_id_3_0,
							"org.xtext.example.mydsl.RulesUNO.Manche");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributAccess().getFullStopKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getAttributAttributMancheParserRuleCall_1_2_0());
					}
					lv_attribut_5_0=ruleAttributManche
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"attribut",
							lv_attribut_5_0,
							"org.xtext.example.mydsl.RulesUNO.AttributManche");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getIdParticipantParserRuleCall_2_0_0());
					}
					lv_id_6_0=ruleParticipant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"id",
							lv_id_6_0,
							"org.xtext.example.mydsl.RulesUNO.Participant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='.'
			{
				newLeafNode(otherlv_7, grammarAccess.getAttributAccess().getFullStopKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getAttributAttributParticipantParserRuleCall_2_2_0());
					}
					lv_attribut_8_0=ruleAttributParticipant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"attribut",
							lv_attribut_8_0,
							"org.xtext.example.mydsl.RulesUNO.AttributParticipant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperateur
entryRuleOperateur returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperateurRule()); }
	iv_ruleOperateur=ruleOperateur
	{ $current=$iv_ruleOperateur.current.getText(); }
	EOF;

// Rule Operateur
ruleOperateur returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperateurAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperateurAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperateurAccess().getPercentSignKeyword_2());
		}
	)
;

// Entry rule entryRuleComparateur
entryRuleComparateur returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparateurRule()); }
	iv_ruleComparateur=ruleComparateur
	{ $current=$iv_ruleComparateur.current.getText(); }
	EOF;

// Rule Comparateur
ruleComparateur returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparateurAccess().getGreaterThanSignKeyword_0());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparateurAccess().getLessThanSignKeyword_1());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparateurAccess().getGreaterThanSignEqualsSignKeyword_2());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparateurAccess().getLessThanSignEqualsSignKeyword_3());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparateurAccess().getEqualsSignEqualsSignKeyword_4());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparateurAccess().getExclamationMarkEqualsSignKeyword_5());
		}
	)
;

// Entry rule entryRuleLogique
entryRuleLogique returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLogiqueRule()); }
	iv_ruleLogique=ruleLogique
	{ $current=$iv_ruleLogique.current.getText(); }
	EOF;

// Rule Logique
ruleLogique returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='&&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLogiqueAccess().getAmpersandAmpersandKeyword_0());
		}
		    |
		kw='||'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLogiqueAccess().getVerticalLineVerticalLineKeyword_1());
		}
		    |
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLogiqueAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		    |
		kw='<->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLogiqueAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleExpressionNumerique
entryRuleExpressionNumerique returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionNumeriqueRule()); }
	iv_ruleExpressionNumerique=ruleExpressionNumerique
	{ $current=$iv_ruleExpressionNumerique.current; }
	EOF;

// Rule ExpressionNumerique
ruleExpressionNumerique returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionNumeriqueAccess().getExpEntierParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleEntier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionNumeriqueRule());
					}
					add(
						$current,
						"exp",
						lv_exp_0_0,
						"org.xtext.example.mydsl.RulesUNO.Entier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionNumeriqueAccess().getOpOperateurParserRuleCall_1_0_0());
					}
					lv_op_1_0=ruleOperateur
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionNumeriqueRule());
						}
						add(
							$current,
							"op",
							lv_op_1_0,
							"org.xtext.example.mydsl.RulesUNO.Operateur");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionNumeriqueAccess().getExpEntierParserRuleCall_1_1_0());
					}
					lv_exp_2_0=ruleEntier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionNumeriqueRule());
						}
						add(
							$current,
							"exp",
							lv_exp_2_0,
							"org.xtext.example.mydsl.RulesUNO.Entier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionBooleene
entryRuleExpressionBooleene returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionBooleeneRule()); }
	iv_ruleExpressionBooleene=ruleExpressionBooleene
	{ $current=$iv_ruleExpressionBooleene.current; }
	EOF;

// Rule ExpressionBooleene
ruleExpressionBooleene returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionBooleeneAccess().getExpBooleenParserRuleCall_0_0_0());
					}
					lv_exp_0_1=ruleBooleen
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionBooleeneRule());
						}
						add(
							$current,
							"exp",
							lv_exp_0_1,
							"org.xtext.example.mydsl.RulesUNO.Booleen");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getExpressionBooleeneAccess().getExpBooleanContraireParserRuleCall_0_0_1());
					}
					lv_exp_0_2=ruleBooleanContraire
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionBooleeneRule());
						}
						add(
							$current,
							"exp",
							lv_exp_0_2,
							"org.xtext.example.mydsl.RulesUNO.BooleanContraire");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionBooleeneAccess().getLogLogiqueParserRuleCall_1_0_0());
					}
					lv_log_1_0=ruleLogique
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionBooleeneRule());
						}
						add(
							$current,
							"log",
							lv_log_1_0,
							"org.xtext.example.mydsl.RulesUNO.Logique");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionBooleeneAccess().getExpBooleenParserRuleCall_1_1_0_0());
						}
						lv_exp_2_1=ruleBooleen
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionBooleeneRule());
							}
							add(
								$current,
								"exp",
								lv_exp_2_1,
								"org.xtext.example.mydsl.RulesUNO.Booleen");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getExpressionBooleeneAccess().getExpBooleanContraireParserRuleCall_1_1_0_1());
						}
						lv_exp_2_2=ruleBooleanContraire
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionBooleeneRule());
							}
							add(
								$current,
								"exp",
								lv_exp_2_2,
								"org.xtext.example.mydsl.RulesUNO.BooleanContraire");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleEntier
entryRuleEntier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntierRule()); }
	iv_ruleEntier=ruleEntier
	{ $current=$iv_ruleEntier.current; }
	EOF;

// Rule Entier
ruleEntier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_val_0_0=RULE_INT
				{
					newLeafNode(lv_val_0_0, grammarAccess.getEntierAccess().getValINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntierRule());
					}
					setWithLastConsumed(
						$current,
						"val",
						lv_val_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEntierAccess().getAttVariableNumeriqueParserRuleCall_1_0());
				}
				lv_att_1_0=ruleVariableNumerique
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntierRule());
					}
					set(
						$current,
						"att",
						lv_att_1_0,
						"org.xtext.example.mydsl.RulesUNO.VariableNumerique");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleen
entryRuleBooleen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleenRule()); }
	iv_ruleBooleen=ruleBooleen
	{ $current=$iv_ruleBooleen.current; }
	EOF;

// Rule Booleen
ruleBooleen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_val_0_1='true'
					{
						newLeafNode(lv_val_0_1, grammarAccess.getBooleenAccess().getValTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleenRule());
						}
						setWithLastConsumed($current, "val", lv_val_0_1, null);
					}
					    |
					lv_val_0_2='false'
					{
						newLeafNode(lv_val_0_2, grammarAccess.getBooleenAccess().getValFalseKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleenRule());
						}
						setWithLastConsumed($current, "val", lv_val_0_2, null);
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleenAccess().getVarVariableBooleeneParserRuleCall_1_0());
				}
				lv_var_1_0=ruleVariableBooleene
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleenRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"org.xtext.example.mydsl.RulesUNO.VariableBooleene");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleenAccess().getExp1ExpressionNumeriqueParserRuleCall_2_0_0());
					}
					lv_exp1_2_0=ruleExpressionNumerique
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleenRule());
						}
						set(
							$current,
							"exp1",
							lv_exp1_2_0,
							"org.xtext.example.mydsl.RulesUNO.ExpressionNumerique");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleenAccess().getCompComparateurParserRuleCall_2_1_0());
					}
					lv_comp_3_0=ruleComparateur
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleenRule());
						}
						set(
							$current,
							"comp",
							lv_comp_3_0,
							"org.xtext.example.mydsl.RulesUNO.Comparateur");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleenAccess().getExp2ExpressionNumeriqueParserRuleCall_2_2_0());
					}
					lv_exp2_4_0=ruleExpressionNumerique
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleenRule());
						}
						set(
							$current,
							"exp2",
							lv_exp2_4_0,
							"org.xtext.example.mydsl.RulesUNO.ExpressionNumerique");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBooleanContraire
entryRuleBooleanContraire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanContraireRule()); }
	iv_ruleBooleanContraire=ruleBooleanContraire
	{ $current=$iv_ruleBooleanContraire.current; }
	EOF;

// Rule BooleanContraire
ruleBooleanContraire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanContraireAccess().getExclamationMarkKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getBooleanContraireAccess().getBooleenParserRuleCall_1());
		}
		this_Booleen_1=ruleBooleen
		{
			$current = $this_Booleen_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getLeftParenthesisKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getConditionAccess().getExpressionBooleeneParserRuleCall_2());
		}
		this_ExpressionBooleene_2=ruleExpressionBooleene
		{
			$current = $this_ExpressionBooleene_2.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getDeclarationAlorsDeclarationParserRuleCall_5_0());
				}
				lv_declarationAlors_5_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					add(
						$current,
						"declarationAlors",
						lv_declarationAlors_5_0,
						"org.xtext.example.mydsl.RulesUNO.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_7='else'
			{
				newLeafNode(otherlv_7, grammarAccess.getConditionAccess().getElseKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getDeclarationSinonDeclarationParserRuleCall_7_2_0());
					}
					lv_declarationSinon_9_0=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						add(
							$current,
							"declarationSinon",
							lv_declarationSinon_9_0,
							"org.xtext.example.mydsl.RulesUNO.Declaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
