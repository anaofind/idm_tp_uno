/*
 * generated by Xtext 2.23.0
 */
grammar InternalRulesUNO;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.RulesUNOGrammarAccess;

}
@parser::members {
	private RulesUNOGrammarAccess grammarAccess;

	public void setGrammarAccess(RulesUNOGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUno
entryRuleUno
:
{ before(grammarAccess.getUnoRule()); }
	 ruleUno
{ after(grammarAccess.getUnoRule()); } 
	 EOF 
;

// Rule Uno
ruleUno 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnoAccess().getGroup()); }
		(rule__Uno__Group__0)
		{ after(grammarAccess.getUnoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParticipantType
entryRuleParticipantType
:
{ before(grammarAccess.getParticipantTypeRule()); }
	 ruleParticipantType
{ after(grammarAccess.getParticipantTypeRule()); } 
	 EOF 
;

// Rule ParticipantType
ruleParticipantType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParticipantTypeAccess().getGroup()); }
		(rule__ParticipantType__Group__0)
		{ after(grammarAccess.getParticipantTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNbJoueur
entryRuleNbJoueur
:
{ before(grammarAccess.getNbJoueurRule()); }
	 ruleNbJoueur
{ after(grammarAccess.getNbJoueurRule()); } 
	 EOF 
;

// Rule NbJoueur
ruleNbJoueur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNbJoueurAccess().getGroup()); }
		(rule__NbJoueur__Group__0)
		{ after(grammarAccess.getNbJoueurAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariantes
entryRuleVariantes
:
{ before(grammarAccess.getVariantesRule()); }
	 ruleVariantes
{ after(grammarAccess.getVariantesRule()); } 
	 EOF 
;

// Rule Variantes
ruleVariantes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariantesAccess().getGroup()); }
		(rule__Variantes__Group__0)
		{ after(grammarAccess.getVariantesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegles
entryRuleRegles
:
{ before(grammarAccess.getReglesRule()); }
	 ruleRegles
{ after(grammarAccess.getReglesRule()); } 
	 EOF 
;

// Rule Regles
ruleRegles 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReglesAccess().getGroup()); }
		(rule__Regles__Group__0)
		{ after(grammarAccess.getReglesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffectation
entryRuleAffectation
:
{ before(grammarAccess.getAffectationRule()); }
	 ruleAffectation
{ after(grammarAccess.getAffectationRule()); } 
	 EOF 
;

// Rule Affectation
ruleAffectation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectationAccess().getGroup()); }
		(rule__Affectation__Group__0)
		{ after(grammarAccess.getAffectationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstructionsBloc
entryRuleInstructionsBloc
:
{ before(grammarAccess.getInstructionsBlocRule()); }
	 ruleInstructionsBloc
{ after(grammarAccess.getInstructionsBlocRule()); } 
	 EOF 
;

// Rule InstructionsBloc
ruleInstructionsBloc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionsBlocAccess().getInstructionChoixParserRuleCall()); }
		ruleInstructionChoix
		{ after(grammarAccess.getInstructionsBlocAccess().getInstructionChoixParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstructionChoix
entryRuleInstructionChoix
:
{ before(grammarAccess.getInstructionChoixRule()); }
	 ruleInstructionChoix
{ after(grammarAccess.getInstructionChoixRule()); } 
	 EOF 
;

// Rule InstructionChoix
ruleInstructionChoix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionChoixAccess().getGroup()); }
		(rule__InstructionChoix__Group__0)
		{ after(grammarAccess.getInstructionChoixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableNumerique
entryRuleVariableNumerique
:
{ before(grammarAccess.getVariableNumeriqueRule()); }
	 ruleVariableNumerique
{ after(grammarAccess.getVariableNumeriqueRule()); } 
	 EOF 
;

// Rule VariableNumerique
ruleVariableNumerique 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableNumeriqueAccess().getVarAssignment()); }
		(rule__VariableNumerique__VarAssignment)
		{ after(grammarAccess.getVariableNumeriqueAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableBooleene
entryRuleVariableBooleene
:
{ before(grammarAccess.getVariableBooleeneRule()); }
	 ruleVariableBooleene
{ after(grammarAccess.getVariableBooleeneRule()); } 
	 EOF 
;

// Rule VariableBooleene
ruleVariableBooleene 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableBooleeneAccess().getAlternatives()); }
		(rule__VariableBooleene__Alternatives)
		{ after(grammarAccess.getVariableBooleeneAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariante
entryRuleVariante
:
{ before(grammarAccess.getVarianteRule()); }
	 ruleVariante
{ after(grammarAccess.getVarianteRule()); } 
	 EOF 
;

// Rule Variante
ruleVariante 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarianteAccess().getAlternatives()); }
		(rule__Variante__Alternatives)
		{ after(grammarAccess.getVarianteAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManche
entryRuleManche
:
{ before(grammarAccess.getMancheRule()); }
	 ruleManche
{ after(grammarAccess.getMancheRule()); } 
	 EOF 
;

// Rule Manche
ruleManche 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMancheAccess().getMANCHEKeyword()); }
		'MANCHE'
		{ after(grammarAccess.getMancheAccess().getMANCHEKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributManche
entryRuleAttributManche
:
{ before(grammarAccess.getAttributMancheRule()); }
	 ruleAttributManche
{ after(grammarAccess.getAttributMancheRule()); } 
	 EOF 
;

// Rule AttributManche
ruleAttributManche 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributMancheAccess().getAlternatives()); }
		(rule__AttributManche__Alternatives)
		{ after(grammarAccess.getAttributMancheAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionManche
entryRuleActionManche
:
{ before(grammarAccess.getActionMancheRule()); }
	 ruleActionManche
{ after(grammarAccess.getActionMancheRule()); } 
	 EOF 
;

// Rule ActionManche
ruleActionManche 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionMancheAccess().getAlternatives()); }
		(rule__ActionManche__Alternatives)
		{ after(grammarAccess.getActionMancheAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoueur
entryRuleJoueur
:
{ before(grammarAccess.getJoueurRule()); }
	 ruleJoueur
{ after(grammarAccess.getJoueurRule()); } 
	 EOF 
;

// Rule Joueur
ruleJoueur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoueurAccess().getAlternatives()); }
		(rule__Joueur__Alternatives)
		{ after(grammarAccess.getJoueurAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionJoueur
entryRuleActionJoueur
:
{ before(grammarAccess.getActionJoueurRule()); }
	 ruleActionJoueur
{ after(grammarAccess.getActionJoueurRule()); } 
	 EOF 
;

// Rule ActionJoueur
ruleActionJoueur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionJoueurAccess().getAlternatives()); }
		(rule__ActionJoueur__Alternatives)
		{ after(grammarAccess.getActionJoueurAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributJoueur
entryRuleAttributJoueur
:
{ before(grammarAccess.getAttributJoueurRule()); }
	 ruleAttributJoueur
{ after(grammarAccess.getAttributJoueurRule()); } 
	 EOF 
;

// Rule AttributJoueur
ruleAttributJoueur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributJoueurAccess().getNB_CARTESKeyword()); }
		'NB_CARTES'
		{ after(grammarAccess.getAttributJoueurAccess().getNB_CARTESKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParticipant
entryRuleParticipant
:
{ before(grammarAccess.getParticipantRule()); }
	 ruleParticipant
{ after(grammarAccess.getParticipantRule()); } 
	 EOF 
;

// Rule Participant
ruleParticipant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParticipantAccess().getAlternatives()); }
		(rule__Participant__Alternatives)
		{ after(grammarAccess.getParticipantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionParticipant
entryRuleActionParticipant
:
{ before(grammarAccess.getActionParticipantRule()); }
	 ruleActionParticipant
{ after(grammarAccess.getActionParticipantRule()); } 
	 EOF 
;

// Rule ActionParticipant
ruleActionParticipant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionParticipantAccess().getAlternatives()); }
		(rule__ActionParticipant__Alternatives)
		{ after(grammarAccess.getActionParticipantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributParticipant
entryRuleAttributParticipant
:
{ before(grammarAccess.getAttributParticipantRule()); }
	 ruleAttributParticipant
{ after(grammarAccess.getAttributParticipantRule()); } 
	 EOF 
;

// Rule AttributParticipant
ruleAttributParticipant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributParticipantAccess().getPOINTSKeyword()); }
		'POINTS'
		{ after(grammarAccess.getAttributParticipantAccess().getPOINTSKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribut
entryRuleAttribut
:
{ before(grammarAccess.getAttributRule()); }
	 ruleAttribut
{ after(grammarAccess.getAttributRule()); } 
	 EOF 
;

// Rule Attribut
ruleAttribut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributAccess().getAlternatives()); }
		(rule__Attribut__Alternatives)
		{ after(grammarAccess.getAttributAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperateur
entryRuleOperateur
:
{ before(grammarAccess.getOperateurRule()); }
	 ruleOperateur
{ after(grammarAccess.getOperateurRule()); } 
	 EOF 
;

// Rule Operateur
ruleOperateur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperateurAccess().getAlternatives()); }
		(rule__Operateur__Alternatives)
		{ after(grammarAccess.getOperateurAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparateur
entryRuleComparateur
:
{ before(grammarAccess.getComparateurRule()); }
	 ruleComparateur
{ after(grammarAccess.getComparateurRule()); } 
	 EOF 
;

// Rule Comparateur
ruleComparateur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparateurAccess().getAlternatives()); }
		(rule__Comparateur__Alternatives)
		{ after(grammarAccess.getComparateurAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogique
entryRuleLogique
:
{ before(grammarAccess.getLogiqueRule()); }
	 ruleLogique
{ after(grammarAccess.getLogiqueRule()); } 
	 EOF 
;

// Rule Logique
ruleLogique 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogiqueAccess().getAlternatives()); }
		(rule__Logique__Alternatives)
		{ after(grammarAccess.getLogiqueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionNumerique
entryRuleExpressionNumerique
:
{ before(grammarAccess.getExpressionNumeriqueRule()); }
	 ruleExpressionNumerique
{ after(grammarAccess.getExpressionNumeriqueRule()); } 
	 EOF 
;

// Rule ExpressionNumerique
ruleExpressionNumerique 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionNumeriqueAccess().getGroup()); }
		(rule__ExpressionNumerique__Group__0)
		{ after(grammarAccess.getExpressionNumeriqueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBooleene
entryRuleExpressionBooleene
:
{ before(grammarAccess.getExpressionBooleeneRule()); }
	 ruleExpressionBooleene
{ after(grammarAccess.getExpressionBooleeneRule()); } 
	 EOF 
;

// Rule ExpressionBooleene
ruleExpressionBooleene 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getGroup()); }
		(rule__ExpressionBooleene__Group__0)
		{ after(grammarAccess.getExpressionBooleeneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntier
entryRuleEntier
:
{ before(grammarAccess.getEntierRule()); }
	 ruleEntier
{ after(grammarAccess.getEntierRule()); } 
	 EOF 
;

// Rule Entier
ruleEntier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntierAccess().getAlternatives()); }
		(rule__Entier__Alternatives)
		{ after(grammarAccess.getEntierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleen
entryRuleBooleen
:
{ before(grammarAccess.getBooleenRule()); }
	 ruleBooleen
{ after(grammarAccess.getBooleenRule()); } 
	 EOF 
;

// Rule Booleen
ruleBooleen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleenAccess().getAlternatives()); }
		(rule__Booleen__Alternatives)
		{ after(grammarAccess.getBooleenAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanContraire
entryRuleBooleanContraire
:
{ before(grammarAccess.getBooleanContraireRule()); }
	 ruleBooleanContraire
{ after(grammarAccess.getBooleanContraireRule()); } 
	 EOF 
;

// Rule BooleanContraire
ruleBooleanContraire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanContraireAccess().getGroup()); }
		(rule__BooleanContraire__Group__0)
		{ after(grammarAccess.getBooleanContraireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__IdAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParticipantTypeAccess().getIdEQUIPEKeyword_2_0_0()); }
		'EQUIPE'
		{ after(grammarAccess.getParticipantTypeAccess().getIdEQUIPEKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getParticipantTypeAccess().getIdJOUEURKeyword_2_0_1()); }
		'JOUEUR'
		{ after(grammarAccess.getParticipantTypeAccess().getIdJOUEURKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getInstructionParserRuleCall_0()); }
		ruleInstruction
		{ after(grammarAccess.getDeclarationAccess().getInstructionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getConditionParserRuleCall_1()); }
		ruleCondition
		{ after(grammarAccess.getDeclarationAccess().getConditionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getAffectationParserRuleCall_2()); }
		ruleAffectation
		{ after(grammarAccess.getDeclarationAccess().getAffectationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getInstructionsBlocParserRuleCall_0()); }
		ruleInstructionsBloc
		{ after(grammarAccess.getInstructionAccess().getInstructionsBlocParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getGroup_1()); }
		(rule__Instruction__Group_1__0)
		{ after(grammarAccess.getInstructionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableBooleene__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableBooleeneAccess().getVarAssignment_0()); }
		(rule__VariableBooleene__VarAssignment_0)
		{ after(grammarAccess.getVariableBooleeneAccess().getVarAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableBooleeneAccess().getActionAssignment_1()); }
		(rule__VariableBooleene__ActionAssignment_1)
		{ after(grammarAccess.getVariableBooleeneAccess().getActionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarianteAccess().getBASEKeyword_0()); }
		'BASE'
		{ after(grammarAccess.getVarianteAccess().getBASEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getDEUX_JOUEURSKeyword_1()); }
		'DEUX_JOUEURS'
		{ after(grammarAccess.getVarianteAccess().getDEUX_JOUEURSKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getUNO_CHALENGEKeyword_2()); }
		'UNO_CHALENGE'
		{ after(grammarAccess.getVarianteAccess().getUNO_CHALENGEKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getEQUIPEKeyword_3()); }
		'EQUIPE'
		{ after(grammarAccess.getVarianteAccess().getEQUIPEKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getCARTES_IDENTIQUESKeyword_4()); }
		'CARTES_IDENTIQUES'
		{ after(grammarAccess.getVarianteAccess().getCARTES_IDENTIQUESKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getSUITESKeyword_5()); }
		'SUITES'
		{ after(grammarAccess.getVarianteAccess().getSUITESKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getZERO_ECHANGEKeyword_6()); }
		'ZERO_ECHANGE'
		{ after(grammarAccess.getVarianteAccess().getZERO_ECHANGEKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getZERO_TOURNANTKeyword_7()); }
		'ZERO_TOURNANT'
		{ after(grammarAccess.getVarianteAccess().getZERO_TOURNANTKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getVarianteAccess().getZERO_QUESTIONKeyword_8()); }
		'ZERO_QUESTION'
		{ after(grammarAccess.getVarianteAccess().getZERO_QUESTIONKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributManche__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributMancheAccess().getNB_JOUEURKeyword_0()); }
		'NB_JOUEUR'
		{ after(grammarAccess.getAttributMancheAccess().getNB_JOUEURKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributMancheAccess().getNB_PARTICIPANTKeyword_1()); }
		'NB_PARTICIPANT'
		{ after(grammarAccess.getAttributMancheAccess().getNB_PARTICIPANTKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionManche__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionMancheAccess().getFINIRKeyword_0()); }
		'FINIR'
		{ after(grammarAccess.getActionMancheAccess().getFINIRKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionMancheAccess().getNOUVELLEKeyword_1()); }
		'NOUVELLE'
		{ after(grammarAccess.getActionMancheAccess().getNOUVELLEKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Joueur__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoueurAccess().getJOUEUR_COURRANTKeyword_0()); }
		'JOUEUR_COURRANT'
		{ after(grammarAccess.getJoueurAccess().getJOUEUR_COURRANTKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getJoueurAccess().getJOUEUR_SUIVANTKeyword_1()); }
		'JOUEUR_SUIVANT'
		{ after(grammarAccess.getJoueurAccess().getJOUEUR_SUIVANTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getJoueurAccess().getJOUEUR_TOUSKeyword_2()); }
		'JOUEUR_TOUS'
		{ after(grammarAccess.getJoueurAccess().getJOUEUR_TOUSKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getJoueurAccess().getJOUEUR_AUTREKeyword_3()); }
		'JOUEUR_AUTRE'
		{ after(grammarAccess.getJoueurAccess().getJOUEUR_AUTREKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getJoueurAccess().getJOUEUR_EXISTEKeyword_4()); }
		'JOUEUR_EXISTE'
		{ after(grammarAccess.getJoueurAccess().getJOUEUR_EXISTEKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getJoueurAccess().getJOUEUR_SELECTIONNEKeyword_5()); }
		'JOUEUR_SELECTIONNE'
		{ after(grammarAccess.getJoueurAccess().getJOUEUR_SELECTIONNEKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionJoueur__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionJoueurAccess().getCRIER_UNOKeyword_0()); }
		'CRIER_UNO'
		{ after(grammarAccess.getActionJoueurAccess().getCRIER_UNOKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_BASEKeyword_1()); }
		'JOUER_CARTE_BASE'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_BASEKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_JOKERKeyword_2()); }
		'JOUER_CARTE_JOKER'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_JOKERKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_INVERSER_SENSKeyword_3()); }
		'JOUER_CARTE_INVERSER_SENS'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_INVERSER_SENSKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PASSE_TON_TOURKeyword_4()); }
		'JOUER_CARTE_PASSE_TON_TOUR'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PASSE_TON_TOURKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PLUS_2Keyword_5()); }
		'JOUER_CARTE_PLUS_2'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PLUS_2Keyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PLUS_4Keyword_6()); }
		'JOUER_CARTE_PLUS_4'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_PLUS_4Keyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_PLUSIEURS_CARTES_IDENTIQUESKeyword_7()); }
		'JOUER_PLUSIEURS_CARTES_IDENTIQUES'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_PLUSIEURS_CARTES_IDENTIQUESKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_ZEROKeyword_8()); }
		'JOUER_CARTE_ZERO'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_CARTE_ZEROKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getJOUER_SUITE_DE_CARTESKeyword_9()); }
		'JOUER_SUITE_DE_CARTES'
		{ after(grammarAccess.getActionJoueurAccess().getJOUER_SUITE_DE_CARTESKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getPOSER_QUESTIONKeyword_10()); }
		'POSER_QUESTION'
		{ after(grammarAccess.getActionJoueurAccess().getPOSER_QUESTIONKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getREJOUERKeyword_11()); }
		'REJOUER'
		{ after(grammarAccess.getActionJoueurAccess().getREJOUERKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getPASSER_SON_TOURKeyword_12()); }
		'PASSER_SON_TOUR'
		{ after(grammarAccess.getActionJoueurAccess().getPASSER_SON_TOURKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getCHANGER_COULEURKeyword_13()); }
		'CHANGER_COULEUR'
		{ after(grammarAccess.getActionJoueurAccess().getCHANGER_COULEURKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getCHOISIR_COULEURKeyword_14()); }
		'CHOISIR_COULEUR'
		{ after(grammarAccess.getActionJoueurAccess().getCHOISIR_COULEURKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getPIOCHER_2_CARTESKeyword_15()); }
		'PIOCHER_2_CARTES'
		{ after(grammarAccess.getActionJoueurAccess().getPIOCHER_2_CARTESKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getPIOCHER_4_CARTESKeyword_16()); }
		'PIOCHER_4_CARTES'
		{ after(grammarAccess.getActionJoueurAccess().getPIOCHER_4_CARTESKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getINVERSER_SENSKeyword_17()); }
		'INVERSER_SENS'
		{ after(grammarAccess.getActionJoueurAccess().getINVERSER_SENSKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getDONNER_CARTES_AU_JOUEUR_SUIVANTKeyword_18()); }
		'DONNER_CARTES_AU_JOUEUR_SUIVANT'
		{ after(grammarAccess.getActionJoueurAccess().getDONNER_CARTES_AU_JOUEUR_SUIVANTKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getECHANGER_JEU_AVEC_UN_ADVERSAIREKeyword_19()); }
		'ECHANGER_JEU_AVEC_UN_ADVERSAIRE'
		{ after(grammarAccess.getActionJoueurAccess().getECHANGER_JEU_AVEC_UN_ADVERSAIREKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getActionJoueurAccess().getREMARQUER_ERREUR_UNOKeyword_20()); }
		'REMARQUER_ERREUR_UNO'
		{ after(grammarAccess.getActionJoueurAccess().getREMARQUER_ERREUR_UNOKeyword_20()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParticipantAccess().getPARTICIPANT_COURRANTKeyword_0()); }
		'PARTICIPANT_COURRANT'
		{ after(grammarAccess.getParticipantAccess().getPARTICIPANT_COURRANTKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getParticipantAccess().getPARTICIPANT_EXISTEKeyword_1()); }
		'PARTICIPANT_EXISTE'
		{ after(grammarAccess.getParticipantAccess().getPARTICIPANT_EXISTEKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getParticipantAccess().getPARTICIPANT_SELECTIONNEKeyword_2()); }
		'PARTICIPANT_SELECTIONNE'
		{ after(grammarAccess.getParticipantAccess().getPARTICIPANT_SELECTIONNEKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getParticipantAccess().getPARTICIPANT_MIN_POINTSKeyword_3()); }
		'PARTICIPANT_MIN_POINTS'
		{ after(grammarAccess.getParticipantAccess().getPARTICIPANT_MIN_POINTSKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionParticipant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionParticipantAccess().getGAGNERKeyword_0()); }
		'GAGNER'
		{ after(grammarAccess.getActionParticipantAccess().getGAGNERKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionParticipantAccess().getPERDREKeyword_1()); }
		'PERDRE'
		{ after(grammarAccess.getActionParticipantAccess().getPERDREKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionParticipantAccess().getETRE_ELIMINEKeyword_2()); }
		'ETRE_ELIMINE'
		{ after(grammarAccess.getActionParticipantAccess().getETRE_ELIMINEKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGroup_0()); }
		(rule__Action__Group_0__0)
		{ after(grammarAccess.getActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_1()); }
		(rule__Action__Group_1__0)
		{ after(grammarAccess.getActionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_2()); }
		(rule__Action__Group_2__0)
		{ after(grammarAccess.getActionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getGroup_0()); }
		(rule__Attribut__Group_0__0)
		{ after(grammarAccess.getAttributAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributAccess().getGroup_1()); }
		(rule__Attribut__Group_1__0)
		{ after(grammarAccess.getAttributAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributAccess().getGroup_2()); }
		(rule__Attribut__Group_2__0)
		{ after(grammarAccess.getAttributAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operateur__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateurAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getOperateurAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOperateurAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperateurAccess().getPercentSignKeyword_2()); }
		'%'
		{ after(grammarAccess.getOperateurAccess().getPercentSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparateur__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparateurAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getComparateurAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparateurAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getComparateurAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparateurAccess().getGreaterThanSignEqualsSignKeyword_2()); }
		'>='
		{ after(grammarAccess.getComparateurAccess().getGreaterThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparateurAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getComparateurAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparateurAccess().getEqualsSignEqualsSignKeyword_4()); }
		'=='
		{ after(grammarAccess.getComparateurAccess().getEqualsSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparateurAccess().getExclamationMarkEqualsSignKeyword_5()); }
		'!='
		{ after(grammarAccess.getComparateurAccess().getExclamationMarkEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logique__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogiqueAccess().getAmpersandAmpersandKeyword_0()); }
		'&&'
		{ after(grammarAccess.getLogiqueAccess().getAmpersandAmpersandKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogiqueAccess().getVerticalLineVerticalLineKeyword_1()); }
		'||'
		{ after(grammarAccess.getLogiqueAccess().getVerticalLineVerticalLineKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogiqueAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
		'->'
		{ after(grammarAccess.getLogiqueAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogiqueAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_3()); }
		'<->'
		{ after(grammarAccess.getLogiqueAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__ExpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getExpBooleenParserRuleCall_0_0_0()); }
		ruleBooleen
		{ after(grammarAccess.getExpressionBooleeneAccess().getExpBooleenParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getExpBooleanContraireParserRuleCall_0_0_1()); }
		ruleBooleanContraire
		{ after(grammarAccess.getExpressionBooleeneAccess().getExpBooleanContraireParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__ExpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getExpBooleenParserRuleCall_1_1_0_0()); }
		ruleBooleen
		{ after(grammarAccess.getExpressionBooleeneAccess().getExpBooleenParserRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getExpBooleanContraireParserRuleCall_1_1_0_1()); }
		ruleBooleanContraire
		{ after(grammarAccess.getExpressionBooleeneAccess().getExpBooleanContraireParserRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntierAccess().getValAssignment_0()); }
		(rule__Entier__ValAssignment_0)
		{ after(grammarAccess.getEntierAccess().getValAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntierAccess().getAttAssignment_1()); }
		(rule__Entier__AttAssignment_1)
		{ after(grammarAccess.getEntierAccess().getAttAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getValAssignment_0()); }
		(rule__Booleen__ValAssignment_0)
		{ after(grammarAccess.getBooleenAccess().getValAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleenAccess().getVarAssignment_1()); }
		(rule__Booleen__VarAssignment_1)
		{ after(grammarAccess.getBooleenAccess().getVarAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleenAccess().getGroup_2()); }
		(rule__Booleen__Group_2__0)
		{ after(grammarAccess.getBooleenAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__ValAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getValTrueKeyword_0_0_0()); }
		'true'
		{ after(grammarAccess.getBooleenAccess().getValTrueKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleenAccess().getValFalseKeyword_0_0_1()); }
		'false'
		{ after(grammarAccess.getBooleenAccess().getValFalseKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__0__Impl
	rule__Uno__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getRUnoKeyword_0()); }
	'RUno'
	{ after(grammarAccess.getUnoAccess().getRUnoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__1__Impl
	rule__Uno__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getUnoAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__2__Impl
	rule__Uno__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getNbJoueurAssignment_2()); }
	(rule__Uno__NbJoueurAssignment_2)
	{ after(grammarAccess.getUnoAccess().getNbJoueurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__3__Impl
	rule__Uno__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getParticipantTypeAssignment_3()); }
	(rule__Uno__ParticipantTypeAssignment_3)
	{ after(grammarAccess.getUnoAccess().getParticipantTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__4__Impl
	rule__Uno__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getVariantesAssignment_4()); }
	(rule__Uno__VariantesAssignment_4)
	{ after(grammarAccess.getUnoAccess().getVariantesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__5__Impl
	rule__Uno__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getReglesAssignment_5()); }
	(rule__Uno__ReglesAssignment_5)?
	{ after(grammarAccess.getUnoAccess().getReglesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getUnoAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParticipantType__Group__0__Impl
	rule__ParticipantType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParticipantTypeAccess().getParticipantKeyword_0()); }
	'participant'
	{ after(grammarAccess.getParticipantTypeAccess().getParticipantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParticipantType__Group__1__Impl
	rule__ParticipantType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParticipantTypeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getParticipantTypeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParticipantType__Group__2__Impl
	rule__ParticipantType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParticipantTypeAccess().getIdAssignment_2()); }
	(rule__ParticipantType__IdAssignment_2)
	{ after(grammarAccess.getParticipantTypeAccess().getIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParticipantType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParticipantTypeAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getParticipantTypeAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NbJoueur__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NbJoueur__Group__0__Impl
	rule__NbJoueur__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNbJoueurAccess().getNb_joueurKeyword_0()); }
	'nb_joueur'
	{ after(grammarAccess.getNbJoueurAccess().getNb_joueurKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NbJoueur__Group__1__Impl
	rule__NbJoueur__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNbJoueurAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getNbJoueurAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NbJoueur__Group__2__Impl
	rule__NbJoueur__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNbJoueurAccess().getValAssignment_2()); }
	(rule__NbJoueur__ValAssignment_2)
	{ after(grammarAccess.getNbJoueurAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NbJoueur__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNbJoueurAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getNbJoueurAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variantes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group__0__Impl
	rule__Variantes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getVariantesAction_0()); }
	()
	{ after(grammarAccess.getVariantesAccess().getVariantesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group__1__Impl
	rule__Variantes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getVariantesKeyword_1()); }
	'variantes'
	{ after(grammarAccess.getVariantesAccess().getVariantesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group__2__Impl
	rule__Variantes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVariantesAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group__3__Impl
	rule__Variantes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getGroup_3()); }
	(rule__Variantes__Group_3__0)?
	{ after(grammarAccess.getVariantesAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getVariantesAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variantes__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group_3__0__Impl
	rule__Variantes__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getVariantesAssignment_3_0()); }
	(rule__Variantes__VariantesAssignment_3_0)
	{ after(grammarAccess.getVariantesAccess().getVariantesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getGroup_3_1()); }
	(rule__Variantes__Group_3_1__0)*
	{ after(grammarAccess.getVariantesAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variantes__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group_3_1__0__Impl
	rule__Variantes__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getVariantesAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variantes__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantesAccess().getVariantesAssignment_3_1_1()); }
	(rule__Variantes__VariantesAssignment_3_1_1)
	{ after(grammarAccess.getVariantesAccess().getVariantesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Regles__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regles__Group__0__Impl
	rule__Regles__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReglesAccess().getReglesAction_0()); }
	()
	{ after(grammarAccess.getReglesAccess().getReglesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regles__Group__1__Impl
	rule__Regles__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReglesAccess().getReglesKeyword_1()); }
	'regles'
	{ after(grammarAccess.getReglesAccess().getReglesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regles__Group__2__Impl
	rule__Regles__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReglesAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getReglesAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regles__Group__3__Impl
	rule__Regles__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReglesAccess().getDeclarationsAssignment_3()); }
	(rule__Regles__DeclarationsAssignment_3)*
	{ after(grammarAccess.getReglesAccess().getDeclarationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regles__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReglesAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getReglesAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__0__Impl
	rule__Affectation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getAttributAssignment_0()); }
	(rule__Affectation__AttributAssignment_0)
	{ after(grammarAccess.getAffectationAccess().getAttributAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__1__Impl
	rule__Affectation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAffectationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__2__Impl
	rule__Affectation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getExpressionAssignment_2()); }
	(rule__Affectation__ExpressionAssignment_2)
	{ after(grammarAccess.getAffectationAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getAffectationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__0__Impl
	rule__Instruction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getActionParserRuleCall_1_0()); }
	ruleAction
	{ after(grammarAccess.getInstructionAccess().getActionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getInstructionAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionChoix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionChoix__Group__0__Impl
	rule__InstructionChoix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionChoixAccess().getChoixKeyword_0()); }
	'choix'
	{ after(grammarAccess.getInstructionChoixAccess().getChoixKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionChoix__Group__1__Impl
	rule__InstructionChoix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionChoixAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInstructionChoixAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionChoix__Group__2__Impl
	rule__InstructionChoix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionChoixAccess().getInstructionsAssignment_2()); }
	(rule__InstructionChoix__InstructionsAssignment_2)
	{ after(grammarAccess.getInstructionChoixAccess().getInstructionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionChoix__Group__3__Impl
	rule__InstructionChoix__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionChoixAccess().getInstructionsAssignment_3()); }
	(rule__InstructionChoix__InstructionsAssignment_3)*
	{ after(grammarAccess.getInstructionChoixAccess().getInstructionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionChoix__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionChoixAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInstructionChoixAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getIdAssignment_0_0()); }
	(rule__Action__IdAssignment_0_0)
	{ after(grammarAccess.getActionAccess().getIdAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__1__Impl
	rule__Action__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getActionAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__2__Impl
	rule__Action__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionAssignment_0_2()); }
	(rule__Action__ActionAssignment_0_2)
	{ after(grammarAccess.getActionAccess().getActionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_0_3()); }
	'()'
	{ after(grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getIdAssignment_1_0()); }
	(rule__Action__IdAssignment_1_0)
	{ after(grammarAccess.getActionAccess().getIdAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getActionAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__2__Impl
	rule__Action__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionAssignment_1_2()); }
	(rule__Action__ActionAssignment_1_2)
	{ after(grammarAccess.getActionAccess().getActionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_1_3()); }
	'()'
	{ after(grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getIdAssignment_2_0()); }
	(rule__Action__IdAssignment_2_0)
	{ after(grammarAccess.getActionAccess().getIdAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__1__Impl
	rule__Action__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getFullStopKeyword_2_1()); }
	'.'
	{ after(grammarAccess.getActionAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__2__Impl
	rule__Action__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionAssignment_2_2()); }
	(rule__Action__ActionAssignment_2_2)
	{ after(grammarAccess.getActionAccess().getActionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_2_3()); }
	'()'
	{ after(grammarAccess.getActionAccess().getLeftParenthesisRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_0__0__Impl
	rule__Attribut__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getIdAssignment_0_0()); }
	(rule__Attribut__IdAssignment_0_0)
	{ after(grammarAccess.getAttributAccess().getIdAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_0__1__Impl
	rule__Attribut__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getAttributAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getAttributAssignment_0_2()); }
	(rule__Attribut__AttributAssignment_0_2)
	{ after(grammarAccess.getAttributAccess().getAttributAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_1__0__Impl
	rule__Attribut__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getIdAssignment_1_0()); }
	(rule__Attribut__IdAssignment_1_0)
	{ after(grammarAccess.getAttributAccess().getIdAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_1__1__Impl
	rule__Attribut__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getAttributAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getAttributAssignment_1_2()); }
	(rule__Attribut__AttributAssignment_1_2)
	{ after(grammarAccess.getAttributAccess().getAttributAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_2__0__Impl
	rule__Attribut__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getIdAssignment_2_0()); }
	(rule__Attribut__IdAssignment_2_0)
	{ after(grammarAccess.getAttributAccess().getIdAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_2__1__Impl
	rule__Attribut__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getFullStopKeyword_2_1()); }
	'.'
	{ after(grammarAccess.getAttributAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribut__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributAccess().getAttributAssignment_2_2()); }
	(rule__Attribut__AttributAssignment_2_2)
	{ after(grammarAccess.getAttributAccess().getAttributAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionNumerique__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNumerique__Group__0__Impl
	rule__ExpressionNumerique__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNumeriqueAccess().getExpAssignment_0()); }
	(rule__ExpressionNumerique__ExpAssignment_0)
	{ after(grammarAccess.getExpressionNumeriqueAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNumerique__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNumeriqueAccess().getGroup_1()); }
	(rule__ExpressionNumerique__Group_1__0)*
	{ after(grammarAccess.getExpressionNumeriqueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionNumerique__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNumerique__Group_1__0__Impl
	rule__ExpressionNumerique__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNumeriqueAccess().getOpAssignment_1_0()); }
	(rule__ExpressionNumerique__OpAssignment_1_0)
	{ after(grammarAccess.getExpressionNumeriqueAccess().getOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNumerique__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNumeriqueAccess().getExpAssignment_1_1()); }
	(rule__ExpressionNumerique__ExpAssignment_1_1)
	{ after(grammarAccess.getExpressionNumeriqueAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBooleene__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBooleene__Group__0__Impl
	rule__ExpressionBooleene__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBooleeneAccess().getExpAssignment_0()); }
	(rule__ExpressionBooleene__ExpAssignment_0)
	{ after(grammarAccess.getExpressionBooleeneAccess().getExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBooleene__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBooleeneAccess().getGroup_1()); }
	(rule__ExpressionBooleene__Group_1__0)*
	{ after(grammarAccess.getExpressionBooleeneAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBooleene__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBooleene__Group_1__0__Impl
	rule__ExpressionBooleene__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBooleeneAccess().getLogAssignment_1_0()); }
	(rule__ExpressionBooleene__LogAssignment_1_0)
	{ after(grammarAccess.getExpressionBooleeneAccess().getLogAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBooleene__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBooleeneAccess().getExpAssignment_1_1()); }
	(rule__ExpressionBooleene__ExpAssignment_1_1)
	{ after(grammarAccess.getExpressionBooleeneAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Booleen__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Booleen__Group_2__0__Impl
	rule__Booleen__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleenAccess().getExp1Assignment_2_0()); }
	(rule__Booleen__Exp1Assignment_2_0)
	{ after(grammarAccess.getBooleenAccess().getExp1Assignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Booleen__Group_2__1__Impl
	rule__Booleen__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleenAccess().getCompAssignment_2_1()); }
	(rule__Booleen__CompAssignment_2_1)
	{ after(grammarAccess.getBooleenAccess().getCompAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Booleen__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleenAccess().getExp2Assignment_2_2()); }
	(rule__Booleen__Exp2Assignment_2_2)
	{ after(grammarAccess.getBooleenAccess().getExp2Assignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanContraire__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanContraire__Group__0__Impl
	rule__BooleanContraire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanContraire__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanContraireAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getBooleanContraireAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanContraire__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanContraire__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanContraire__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanContraireAccess().getBooleenParserRuleCall_1()); }
	ruleBooleen
	{ after(grammarAccess.getBooleanContraireAccess().getBooleenParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpressionBooleeneParserRuleCall_2()); }
	ruleExpressionBooleene
	{ after(grammarAccess.getConditionAccess().getExpressionBooleeneParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConditionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__4__Impl
	rule__Condition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__5__Impl
	rule__Condition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getDeclarationAlorsAssignment_5()); }
	(rule__Condition__DeclarationAlorsAssignment_5)*
	{ after(grammarAccess.getConditionAccess().getDeclarationAlorsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__6__Impl
	rule__Condition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_7()); }
	(rule__Condition__Group_7__0)?
	{ after(grammarAccess.getConditionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_7__0__Impl
	rule__Condition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getElseKeyword_7_0()); }
	'else'
	{ after(grammarAccess.getConditionAccess().getElseKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_7__1__Impl
	rule__Condition__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_7_1()); }
	'{'
	{ after(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_7__2__Impl
	rule__Condition__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getDeclarationSinonAssignment_7_2()); }
	(rule__Condition__DeclarationSinonAssignment_7_2)*
	{ after(grammarAccess.getConditionAccess().getDeclarationSinonAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_7_3()); }
	'}'
	{ after(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Uno__NbJoueurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoAccess().getNbJoueurNbJoueurParserRuleCall_2_0()); }
		ruleNbJoueur
		{ after(grammarAccess.getUnoAccess().getNbJoueurNbJoueurParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__ParticipantTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoAccess().getParticipantTypeParticipantTypeParserRuleCall_3_0()); }
		ruleParticipantType
		{ after(grammarAccess.getUnoAccess().getParticipantTypeParticipantTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__VariantesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoAccess().getVariantesVariantesParserRuleCall_4_0()); }
		ruleVariantes
		{ after(grammarAccess.getUnoAccess().getVariantesVariantesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__ReglesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoAccess().getReglesReglesParserRuleCall_5_0()); }
		ruleRegles
		{ after(grammarAccess.getUnoAccess().getReglesReglesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantType__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParticipantTypeAccess().getIdAlternatives_2_0()); }
		(rule__ParticipantType__IdAlternatives_2_0)
		{ after(grammarAccess.getParticipantTypeAccess().getIdAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NbJoueur__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNbJoueurAccess().getValINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNbJoueurAccess().getValINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__VariantesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantesAccess().getVariantesVarianteParserRuleCall_3_0_0()); }
		ruleVariante
		{ after(grammarAccess.getVariantesAccess().getVariantesVarianteParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variantes__VariantesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantesAccess().getVariantesVarianteParserRuleCall_3_1_1_0()); }
		ruleVariante
		{ after(grammarAccess.getVariantesAccess().getVariantesVarianteParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regles__DeclarationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReglesAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
		ruleDeclaration
		{ after(grammarAccess.getReglesAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__AttributAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getAttributAttributParserRuleCall_0_0()); }
		ruleAttribut
		{ after(grammarAccess.getAffectationAccess().getAttributAttributParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getExpressionExpressionNumeriqueParserRuleCall_2_0()); }
		ruleExpressionNumerique
		{ after(grammarAccess.getAffectationAccess().getExpressionExpressionNumeriqueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__InstructionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionChoixAccess().getInstructionsInstructionParserRuleCall_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getInstructionChoixAccess().getInstructionsInstructionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionChoix__InstructionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionChoixAccess().getInstructionsInstructionParserRuleCall_3_0()); }
		ruleInstruction
		{ after(grammarAccess.getInstructionChoixAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNumerique__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNumeriqueAccess().getVarAttributParserRuleCall_0()); }
		ruleAttribut
		{ after(grammarAccess.getVariableNumeriqueAccess().getVarAttributParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableBooleene__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableBooleeneAccess().getVarVarianteParserRuleCall_0_0()); }
		ruleVariante
		{ after(grammarAccess.getVariableBooleeneAccess().getVarVarianteParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableBooleene__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableBooleeneAccess().getActionActionParserRuleCall_1_0()); }
		ruleAction
		{ after(grammarAccess.getVariableBooleeneAccess().getActionActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IdAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIdJoueurParserRuleCall_0_0_0()); }
		ruleJoueur
		{ after(grammarAccess.getActionAccess().getIdJoueurParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionActionJoueurParserRuleCall_0_2_0()); }
		ruleActionJoueur
		{ after(grammarAccess.getActionAccess().getActionActionJoueurParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IdAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIdMancheParserRuleCall_1_0_0()); }
		ruleManche
		{ after(grammarAccess.getActionAccess().getIdMancheParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionActionMancheParserRuleCall_1_2_0()); }
		ruleActionManche
		{ after(grammarAccess.getActionAccess().getActionActionMancheParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IdAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIdParticipantParserRuleCall_2_0_0()); }
		ruleParticipant
		{ after(grammarAccess.getActionAccess().getIdParticipantParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionActionParticipantParserRuleCall_2_2_0()); }
		ruleActionParticipant
		{ after(grammarAccess.getActionAccess().getActionActionParticipantParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__IdAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getIdJoueurParserRuleCall_0_0_0()); }
		ruleJoueur
		{ after(grammarAccess.getAttributAccess().getIdJoueurParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__AttributAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getAttributAttributJoueurParserRuleCall_0_2_0()); }
		ruleAttributJoueur
		{ after(grammarAccess.getAttributAccess().getAttributAttributJoueurParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__IdAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getIdMancheParserRuleCall_1_0_0()); }
		ruleManche
		{ after(grammarAccess.getAttributAccess().getIdMancheParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__AttributAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getAttributAttributMancheParserRuleCall_1_2_0()); }
		ruleAttributManche
		{ after(grammarAccess.getAttributAccess().getAttributAttributMancheParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__IdAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getIdParticipantParserRuleCall_2_0_0()); }
		ruleParticipant
		{ after(grammarAccess.getAttributAccess().getIdParticipantParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__AttributAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getAttributAttributParticipantParserRuleCall_2_2_0()); }
		ruleAttributParticipant
		{ after(grammarAccess.getAttributAccess().getAttributAttributParticipantParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNumeriqueAccess().getExpEntierParserRuleCall_0_0()); }
		ruleEntier
		{ after(grammarAccess.getExpressionNumeriqueAccess().getExpEntierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__OpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNumeriqueAccess().getOpOperateurParserRuleCall_1_0_0()); }
		ruleOperateur
		{ after(grammarAccess.getExpressionNumeriqueAccess().getOpOperateurParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNumerique__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNumeriqueAccess().getExpEntierParserRuleCall_1_1_0()); }
		ruleEntier
		{ after(grammarAccess.getExpressionNumeriqueAccess().getExpEntierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getExpAlternatives_0_0()); }
		(rule__ExpressionBooleene__ExpAlternatives_0_0)
		{ after(grammarAccess.getExpressionBooleeneAccess().getExpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__LogAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getLogLogiqueParserRuleCall_1_0_0()); }
		ruleLogique
		{ after(grammarAccess.getExpressionBooleeneAccess().getLogLogiqueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBooleene__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBooleeneAccess().getExpAlternatives_1_1_0()); }
		(rule__ExpressionBooleene__ExpAlternatives_1_1_0)
		{ after(grammarAccess.getExpressionBooleeneAccess().getExpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entier__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntierAccess().getValINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getEntierAccess().getValINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entier__AttAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntierAccess().getAttVariableNumeriqueParserRuleCall_1_0()); }
		ruleVariableNumerique
		{ after(grammarAccess.getEntierAccess().getAttVariableNumeriqueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getValAlternatives_0_0()); }
		(rule__Booleen__ValAlternatives_0_0)
		{ after(grammarAccess.getBooleenAccess().getValAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__VarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getVarVariableBooleeneParserRuleCall_1_0()); }
		ruleVariableBooleene
		{ after(grammarAccess.getBooleenAccess().getVarVariableBooleeneParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Exp1Assignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getExp1ExpressionNumeriqueParserRuleCall_2_0_0()); }
		ruleExpressionNumerique
		{ after(grammarAccess.getBooleenAccess().getExp1ExpressionNumeriqueParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__CompAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getCompComparateurParserRuleCall_2_1_0()); }
		ruleComparateur
		{ after(grammarAccess.getBooleenAccess().getCompComparateurParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Booleen__Exp2Assignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleenAccess().getExp2ExpressionNumeriqueParserRuleCall_2_2_0()); }
		ruleExpressionNumerique
		{ after(grammarAccess.getBooleenAccess().getExp2ExpressionNumeriqueParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__DeclarationAlorsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getDeclarationAlorsDeclarationParserRuleCall_5_0()); }
		ruleDeclaration
		{ after(grammarAccess.getConditionAccess().getDeclarationAlorsDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__DeclarationSinonAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getDeclarationSinonDeclarationParserRuleCall_7_2_0()); }
		ruleDeclaration
		{ after(grammarAccess.getConditionAccess().getDeclarationSinonDeclarationParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
